---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name  }}-web
  labels:
    app: {{ .Release.Name  }}-web
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name  }}-web     
  replicas: {{ .Values.web.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name  }}-web
    spec:
      securityContext:
        runAsUser: 1001
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 2
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 2
      terminationGracePeriodSeconds: 5
      affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .Release.Name  }}-web
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: web
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.web.imagePullPolicy }}
          ports:
            - containerPort: 8080
            - containerPort: 3022
          resources:
            requests:
              memory: "2048Mi"
              cpu: "256m"
            limits:
              memory: "2048Mi"
              cpu: {{ .Values.web.cpus }}
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 120
          env:
            - name: HOST
              value: {{ .Values.hostname }}
            - name: INTERNAL_PORT
              value: "8080"
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: secret_key_base
            - name: EXTERNAL_IP
              value: "your-server-dns"
            - name: HTTPS_PORT
              value: "80"
            - name: DB_USER
              value: {{ .Values.db_username }}
            - name: DB_PASSWORD
              value: "{{ .Values.db_password }}"
            - name: DB_NAME
              value: {{ .Values.db_name }}
            - name: DB_HOSTNAME
              value: {{ .Values.db_hostname }}
            - name: CDR_ROOT_PATH
              value: {{ .Values.cdr_root_path }}