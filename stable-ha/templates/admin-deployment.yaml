---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name  }}-admin-service
  labels:
    app: {{ .Release.Name  }}-admin-service
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name  }}-admin-service
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 70%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Release.Name  }}-admin-service
    spec:
      securityContext:
        runAsUser: 1001
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 2
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 2
      terminationGracePeriodSeconds: 5
      affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - {{ .Release.Name  }}-primary-web
                    - {{ .Release.Name  }}-secondary-web
                topologyKey: "kubernetes.io/hostname"
      containers:
        - name: admin-service
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.web.imagePullPolicy }}
          ports:
            - containerPort: 4000
            - containerPort: 3022
          resources:
            requests:
              memory: "2048Mi"
              cpu: "256m"
            limits:
              memory: "2048Mi"
              cpu: {{ .Values.web.cpus }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 8080
          #   initialDelaySeconds: 120
          env:
            - name: HOST
              value: {{ .Values.hostname }}
            - name: INTERNAL_PORT
              value: "4000"
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: secrets
                  key: secret_key_base
            - name: EXTERNAL_IP
              value: "your-server-dns"
            - name: DB_USER
              value: {{ .Values.db_username }}
            - name: DB_PASSWORD
              value: {{ .Values.db_password }}
            - name: DB_NAME
              value: {{ .Values.db_name }}
            - name: DB_HOSTNAME
              value: {{ .Values.db_hostname }}
            - name: DB_PORT
              value: {{ quote .Values.db_port }}
            - name: CDR_ROOT_PATH
              value: {{ .Values.cdr_root_path }}
            - name: DB_PORT
              value: {{ quote .Values.db_port }}
            - name: LOGGING_LEVEL
              value: {{ .Values.logging_level }}